Site control panel
==================

Test setup::

    >>> app = layer['app']
    >>> from plone.testing.z2 import Browser
    >>> browser = Browser(app)
    >>> browser.handleErrors = False
    >>> browser.addHeader('Authorization', 'Basic admin:secret')
    >>> portal = layer['portal']
    >>> from zope.component import getUtility
    >>> from Products.CMFCore.interfaces import IPropertiesTool
    >>> ptool = getUtility(IPropertiesTool)
    >>> types_configlet_url = 'http://nohost/plone/@@types-controlpanel'

Viewing the types control panel
-----------------------------

Choose a standard type and hit cancel:

    >>> browser.open(types_configlet_url)
    >>> browser.getControl(name='type_id').value = ['Link']
    >>> browser.getControl('Cancel').click()

We should be back on the Site Setup screen:

    >>> 'plone_control_panel' in browser.url
    True

Navigate back to the type control panel and select link again:

    >>> browser.getLink('Types').click()
    >>> browser.getControl(name='type_id').value = ['Link']
    >>> browser.getForm(action=types_configlet_url).submit()

Enable allow commenting for the link type

    >>> browser.getControl('Allow comments').selected = True
    >>> browser.getControl('Apply Changes').click()

Navigate back to link type to confirm setting.  Also confirm that the
redirect_links setting is enabled. For easier testing we simplify the
white space:

    >>> browser.getLink('Types').click()
    >>> browser.getControl(name='type_id').value = ['Link']
    >>> browser.getForm(action=types_configlet_url).submit()
    >>> 'Globally addable' in browser.contents
    True
    >>> 'Allow comments' in browser.contents
    True
    >>> 'Visible in searches' in browser.contents
    True
    >>> '<input id="redirect_links" type="checkbox" class="noborder" name="redirect_links:boolean" checked="checked" />' in browser.contents
    True
    >>> 'Redirect immediately to link target' in browser.contents
    True

For only the link type, we have a special setting that controls whether the
view will redirect to the remote url for users without editing permissions:

    >>> browser.open(types_configlet_url)
    >>> browser.getControl(name='type_id').value = ['News Item']
    >>> browser.getForm(action=types_configlet_url).submit()
    >>> '<input id="redirect_links"' in browser.contents
    False

We'll confirm that we can disable the redirect_links option for the link type:

    >>> browser.getControl(name='type_id').value = ['Link']
    >>> browser.getForm(action=types_configlet_url).submit()
    >>> '<input id="redirect_links"' in browser.contents
    True
    >>> browser.getControl(name='redirect_links:boolean').value = False
    >>> browser.getControl('Apply Changes').click()

Now the redirect links checkbox option is no longer checked:

    >>> browser.open(types_configlet_url)
    >>> browser.getControl(name='type_id').value = ['Link']
    >>> browser.getForm(action=types_configlet_url).submit()
    >>> 'Globally addable' in browser.contents
    True
    >>> 'Allow comments' in browser.contents
    True
    >>> 'Visible in searches' in browser.contents
    True
    >>> '<input id="redirect_links" type="checkbox" class="noborder" name="redirect_links:boolean" />' in browser.contents
    True
    >>> 'Redirect immediately to link target' in browser.contents
    True

This change should modify the redirect_links value in site_properties as well:

    >>> ptool.site_properties.redirect_links
    False


No default workflow
-------------------

This references http://dev.plone.org/plone/ticket/11901

Open the Types control panel and set the default workflow to None:
    >>> browser.open(types_configlet_url)
    >>> browser.getControl(name='new_workflow').value = ['[none]']
    >>> browser.getControl(name="form.button.SelectWorkflow").click()
    >>> browser.getControl(name="form.button.Save").click()

Now choose a standard type and submit:
    >>> browser.getControl(name='type_id').value = ['Link']
    >>> browser.getControl(name="form.button.SelectContentType").click()

    >>> browser.contents
    '...Globally addable...
    ...Allow comments...
    ...Visible in searches...'
