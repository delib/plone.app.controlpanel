==============================================================================
Navigation Control Panel
==============================================================================

The navigation control panel lets you control how the navigation is
constructed in your site. The control panel holds settings for
"tab generation settings", "displayed content types", "workflow settings",
and "show excluded items". We will test those sections one after another.


Test setup
----------

    >>> app = layer['app']
    >>> from plone.testing.z2 import Browser
    >>> browser = Browser(app)
    >>> browser.handleErrors = False
    >>> browser.addHeader('Authorization', 'Basic admin:secret')
    >>> portal = layer['portal']
    >>> portal_url = portal.absolute_url()

    >>> from zope.component import getUtility
    >>> from plone.registry.interfaces import IRegistry
    >>> from plone.app.controlpanel.interfaces import INavigationSchema

    >>> registry = getUtility(IRegistry)
    >>> settings = registry.forInterface(INavigationSchema)


Tabs Generation Settings
------------------------

    >>> browser.open(portal_url + '/plone_control_panel')
    >>> browser.getLink('Navigation').click()
    >>> browser.url.endswith('navigation-controlpanel')
    True

Default values:

    >>> browser.getControl('Automatically generate tabs', index=0).selected
    True
    >>> browser.getControl('Generate tabs for items other than folders').selected
    True

Change settings:

    >>> browser.getControl('Automatically generate tabs', index=0).selected = False
    >>> browser.getControl('Generate tabs for items other than folders').selected = False

    >>> browser.getControl("Save").click()
    >>> browser.url.endswith('navigation-controlpanel')
    True
    >>> 'Changes saved.' in browser.contents
    True

Make sure the settings have been applied properly:

    >>> settings.generate_tabs
    False

    >>> settings.nonfolderish_tabs
    False


Displayed Content Types
-----------------------

    >>> browser.open(portal_url + '/plone_control_panel')
    >>> browser.getLink('Navigation').click()
    >>> browser.url.endswith('navigation-controlpanel')
    True

Default values:

    >>> browser.getControl('Collection', index=0).selected
    False
    >>> browser.getControl('Comment').selected
    False
    >>> browser.getControl('Event').selected
    False
    >>> browser.getControl('File').selected
    False
    >>> browser.getControl('Folder').selected
    False
    >>> browser.getControl('Image').selected
    False
    >>> browser.getControl('Link').selected
    False
    >>> browser.getControl('News Item').selected
    False
    >>> browser.getControl('Document').selected
    False

Change settings:

    >>> browser.getControl('Collection', index=0).selected = True
    >>> browser.getControl('Comment').selected = True
    >>> browser.getControl('Event').selected = True
    >>> browser.getControl('File').selected = True
    >>> browser.getControl('Folder').selected = True
    >>> browser.getControl('Image').selected = True
    >>> browser.getControl('Link').selected = True
    >>> browser.getControl('News Item').selected = True
    >>> browser.getControl('Document').selected = True

    >>> browser.getControl("Save").click()
    >>> browser.url.endswith('navigation-controlpanel')
    True
    >>> 'Changes saved.' in browser.contents
    True

Make sure the settings have been applied properly:

    >>> 'Collection' in settings.displayed_types
    True

    >>> 'Comment' in settings.displayed_types
    False

    >>> 'Event' in settings.displayed_types
    True

    >>> 'File' in settings.displayed_types
    True

    >>> 'Folder' in settings.displayed_types
    True

    >>> 'Image' in settings.displayed_types
    True

    >>> 'Link' in settings.displayed_types
    True

    >>> 'News Item' in settings.displayed_types
    True

    >>> 'Document' in settings.displayed_types
    True


Workflow Settings
-----------------

    >>> browser.open(portal_url + '/plone_control_panel')
    >>> browser.getLink('Navigation').click()
    >>> browser.url.endswith('navigation-controlpanel')
    True

Default values:

    >>> browser.getControl('Filter on workflow state').selected
    False

    >>> browser.getControl('Externally visible [external]').selected
    False
    >>> browser.getControl('Internal draft [internal]').selected
    False
    >>> browser.getControl('Internally published [internally_published]').selected
    False
    >>> browser.getControl('Pending [pending]').selected
    False
    >>> browser.getControl('Private [private]').selected
    False
    >>> browser.getControl('Public draft [visible]').selected
    False
    >>> browser.getControl('Published [published]').selected
    False

Change settings:

    >>> browser.getControl('Filter on workflow state').selected = True
    >>> browser.getControl('Externally visible [external]').selected = True
    >>> browser.getControl('Internal draft [internal]').selected = True
    >>> browser.getControl('Internally published [internally_published]').selected = True
    >>> browser.getControl('Pending [pending]').selected = True
    >>> browser.getControl('Private [private]').selected = True
    >>> browser.getControl('Public draft [visible]').selected = True
    >>> browser.getControl('Published [published]').selected = True

    >>> browser.getControl("Save").click()
    >>> browser.url.endswith('navigation-controlpanel')
    True
    >>> 'Changes saved.' in browser.contents
    True

Make sure the settings have been applied properly:

    >>> settings.filter_on_workflow
    True

    >>> 'external' in settings.workflow_states_to_show
    True

    >>> 'internal' in settings.workflow_states_to_show
    True

    >>> 'internally_published' in settings.workflow_states_to_show
    True

    >>> 'pending' in settings.workflow_states_to_show
    True

    >>> 'private' in settings.workflow_states_to_show
    True

    >>> 'visible' in settings.workflow_states_to_show
    True

    >>> 'published' in settings.workflow_states_to_show
    True


Show excluded items
-------------------

    >>> browser.open(portal_url + '/plone_control_panel')
    >>> browser.getLink('Navigation').click()
    >>> browser.url.endswith('navigation-controlpanel')
    True

Default value:

    >>> browser.getControl('Show items normally excluded from navigation if viewing their children.').selected
    True

Change setting:

    >>> browser.getControl('Show items normally excluded from navigation if viewing their children.').selected = False

    >>> browser.getControl("Save").click()
    >>> browser.url.endswith('navigation-controlpanel')
    True
    >>> 'Changes saved.' in browser.contents
    True

Make sure the settings have been applied properly:

    >>> settings.show_excluded_items
    False
